import {
  {{pascalCase name}}MachineContext,
  {{pascalCase name}}MachineSender,
} from '../types';
{{> xstateLogger isKME=isKME loggerName='onExternalInfoUpdated' loggerType='MachineService' commented=false loggerPath='../utils/'}}

// TODO add link to reference
export const onExternalInfoUpdated =
  (context: {{pascalCase name}}MachineContext, data: any) => (send: {{pascalCase name}}MachineSender) => {
    // const handleExampleUpdated = (exampleData: ExampleData | null) => {
    //   if (ownUser) {
    //     logger.log(`updating external info for user '${ownUser.id}'`)
    //     send({
    //       type: {{pascalCase name}}MachineEventsTypes.ExternalInfoUpdated,
    //       externalInfo: {
    //         something: exampleData.something
    //       },
    //     });
    //   }
    // };

    // onExampleUpdated.on(
    //   handleExampleUpdated,
    //   data.emitLastValue ?? false      
    // );
    
    // return () => {
    //   onExampleUpdated.off(handleExampleUpdated);
    // };
  };
