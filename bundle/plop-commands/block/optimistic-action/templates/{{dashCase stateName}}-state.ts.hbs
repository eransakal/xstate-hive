import { {{pascalCase machineName}}MachineEventsTypes , {{pascalCase machineName}}MachineStateConfig } from '{{relativePathToMachine}}types';

export const {{camelCase stateName}}State: {{pascalCase machineName}}MachineStateConfig = {
  initial: 'idle',
  on: {
    [{{pascalCase machineName}}MachineEventsTypes.{{pathToPascalCase contextPropFullPath}}Updated]: [
      {
        actions: ['update{{pathToPascalCase contextPropFullPath}}', 'cleanIntermediate{{pathToPascalCase contextPropFullPath}}'],
        target: '.idle',
      },
    ],
  },
  states: {
    idle: {
      on: {
        [{{pascalCase machineName}}MachineEventsTypes.Update{{pathToPascalCase contextPropFullPath}}]: [
          {
            {{#if guardName }}cond: '{{pascalCase guardName}}',
            {{/if}}actions: ['updateIntermediate{{pathToPascalCase contextPropFullPath}}'],
            target: 'inProgress',
          },
        ],
      },
    },
    inProgress: {
      invoke: {
        src: 'update{{pathToPascalCase contextPropFullPath}}',
        onDone: {
          target: 'pendingWebsocket',
        },
        onError: {
          actions: [
            {{#if useNotifications}}actions.send((context) => ({
              type: {{pascalCase machineName}}MachineEventsTypes.ShowNotification,
              payload: {
                variant: 'error',
                message: `{{dashCase stateName}}-failed`,
                reason: `An error occurred while requesting an update for '{{camelCase (pathToPascalCase contextPropFullPath)}}' to '${context.{{optionalPath contextPropFullPath}} || ''}'. As a result, the intermediate value is being reverted.`
              },
            })),
            {{/if}}'cleanIntermediate{{pathToPascalCase contextPropFullPath}}',          
          ],
          target: 'idle',
        },
      },
    },
    pendingWebsocket: {
      after: {
        5000: {
          actions: [          
            {{#if useNotifications}}actions.send((context) => ({
              type: {{pascalCase machineName}}MachineEventsTypes.ShowNotification,
              payload: {
                variant: 'error',
                message: `{{dashCase stateName}}-failed`,
                reason: `The server failed to respond via the web socket when updating '{{camelCase (pathToPascalCase contextPropFullPath)}}' to '${context.{{optionalPath contextPropFullPath}} || ''}'. As a result, the intermediate value is being reverted.`
              },
            })),
            {{/if}}'cleanIntermediate{{pathToPascalCase contextPropFullPath}}',
          ],
          target: 'idle',
        },
      },
    },
  },
};
